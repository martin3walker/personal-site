{
  "contentTypes": [
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "til",
        "type": "ContentType",
        "createdAt": "2018-05-08T21:26:54.776Z",
        "updatedAt": "2018-10-08T09:52:52.371Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 11,
        "version": 22,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 21,
        "firstPublishedAt": "2018-05-08T21:26:55.210Z",
        "publishedAt": "2018-10-08T09:52:52.371Z"
      },
      "displayField": "title",
      "name": "TIL",
      "description": "Today I Learned",
      "fields": [
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "body",
          "name": "Body",
          "type": "Text",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "date",
          "name": "Date",
          "type": "Date",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "slug",
          "name": "Slug",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "category",
        "type": "ContentType",
        "createdAt": "2018-09-05T09:37:16.375Z",
        "updatedAt": "2018-09-26T13:24:43.428Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 7,
        "version": 14,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 13,
        "firstPublishedAt": "2018-09-05T09:37:20.678Z",
        "publishedAt": "2018-09-26T13:24:43.428Z"
      },
      "displayField": "title",
      "name": "Category",
      "description": "",
      "fields": [
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "slug",
          "name": "Slug",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "entries",
          "name": "entries",
          "type": "Array",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false,
          "items": {
            "type": "Link",
            "validations": [
              {
                "linkContentType": [
                  "til"
                ]
              }
            ],
            "linkType": "Entry"
          }
        },
        {
          "id": "iconClass",
          "name": "Icon Class",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "project",
        "type": "ContentType",
        "createdAt": "2018-09-27T15:54:30.608Z",
        "updatedAt": "2018-09-27T15:54:30.926Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 2,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1,
        "firstPublishedAt": "2018-09-27T15:54:30.926Z",
        "publishedAt": "2018-09-27T15:54:30.926Z"
      },
      "displayField": "title",
      "name": "Project",
      "description": "",
      "fields": [
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "url",
          "name": "Url",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "cover",
          "name": "Cover",
          "type": "Link",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false,
          "linkType": "Asset"
        },
        {
          "id": "github",
          "name": "Github",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "introduction",
        "type": "ContentType",
        "createdAt": "2018-09-27T15:56:32.304Z",
        "updatedAt": "2018-09-27T15:56:34.514Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 3,
        "firstPublishedAt": "2018-09-27T15:56:32.664Z",
        "publishedAt": "2018-09-27T15:56:34.514Z"
      },
      "displayField": "headline",
      "name": "Introduction",
      "description": "",
      "fields": [
        {
          "id": "headline",
          "name": "Headline",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "picture",
          "name": "Picture",
          "type": "Link",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false,
          "linkType": "Asset"
        },
        {
          "id": "description",
          "name": "Description",
          "type": "Text",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "introTils",
        "type": "ContentType",
        "createdAt": "2018-09-29T12:14:51.685Z",
        "updatedAt": "2018-09-29T12:25:25.577Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 4,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 3,
        "firstPublishedAt": "2018-09-29T12:14:52.097Z",
        "publishedAt": "2018-09-29T12:25:25.577Z"
      },
      "displayField": "title",
      "name": "introTils",
      "description": "",
      "fields": [
        {
          "id": "title",
          "name": "Title",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "tils",
          "name": "Tils",
          "type": "Array",
          "localized": false,
          "required": false,
          "validations": [
            {
              "size": {
                "max": 3
              }
            }
          ],
          "disabled": false,
          "omitted": false,
          "items": {
            "type": "Link",
            "validations": [
              {
                "linkContentType": [
                  "til"
                ]
              }
            ],
            "linkType": "Entry"
          }
        },
        {
          "id": "ctaText",
          "name": "CTAText",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        },
        {
          "id": "ctaSlug",
          "name": "CTASlug",
          "type": "Symbol",
          "localized": false,
          "required": false,
          "validations": [
          ],
          "disabled": false,
          "omitted": false
        }
      ]
    }
  ],
  "editorInterfaces": [
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "3r3os8le32yo",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 22,
        "createdAt": "2018-05-08T21:26:55.325Z",
        "createdBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2018-10-08T09:52:53.296Z",
        "updatedBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "til",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine"
        },
        {
          "fieldId": "body",
          "widgetId": "markdown"
        },
        {
          "fieldId": "date",
          "settings": {
            "format": "dateonly"
          },
          "widgetId": "datePicker"
        },
        {
          "fieldId": "slug",
          "widgetId": "slugEditor"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "3r3os8le32yo",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 14,
        "createdAt": "2018-09-05T09:37:20.823Z",
        "createdBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2018-09-26T13:24:44.480Z",
        "updatedBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "category",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine"
        },
        {
          "fieldId": "slug",
          "widgetId": "slugEditor"
        },
        {
          "fieldId": "entries",
          "settings": {
            "bulkEditing": false
          },
          "widgetId": "entryLinksEditor"
        },
        {
          "fieldId": "iconClass",
          "widgetId": "singleLine"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "3r3os8le32yo",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 2,
        "createdAt": "2018-09-27T15:54:31.127Z",
        "createdBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2018-09-27T15:54:31.844Z",
        "updatedBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "project",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine"
        },
        {
          "fieldId": "url",
          "widgetId": "urlEditor"
        },
        {
          "fieldId": "cover",
          "widgetId": "assetLinkEditor"
        },
        {
          "fieldId": "github",
          "widgetId": "singleLine"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "3r3os8le32yo",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 4,
        "createdAt": "2018-09-27T15:56:32.820Z",
        "createdBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2018-09-27T15:56:35.277Z",
        "updatedBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "introduction",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "headline",
          "widgetId": "singleLine"
        },
        {
          "fieldId": "picture",
          "widgetId": "assetLinkEditor"
        },
        {
          "fieldId": "description",
          "widgetId": "markdown"
        }
      ]
    },
    {
      "sys": {
        "id": "default",
        "type": "EditorInterface",
        "space": {
          "sys": {
            "id": "3r3os8le32yo",
            "type": "Link",
            "linkType": "Space"
          }
        },
        "version": 4,
        "createdAt": "2018-09-29T12:14:52.213Z",
        "createdBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "updatedAt": "2018-09-29T12:25:26.339Z",
        "updatedBy": {
          "sys": {
            "id": "0xAU1rz5uyEJ0ItTExcjsa",
            "type": "Link",
            "linkType": "User"
          }
        },
        "contentType": {
          "sys": {
            "id": "introTils",
            "type": "Link",
            "linkType": "ContentType"
          }
        },
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        }
      },
      "controls": [
        {
          "fieldId": "title",
          "widgetId": "singleLine"
        },
        {
          "fieldId": "tils",
          "settings": {
            "bulkEditing": false
          },
          "widgetId": "entryCardsEditor"
        },
        {
          "fieldId": "ctaText",
          "widgetId": "singleLine"
        },
        {
          "fieldId": "ctaSlug",
          "widgetId": "singleLine"
        }
      ]
    }
  ],
  "entries": [
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "7m3Yk812M024UgciqoKGWm",
        "type": "Entry",
        "createdAt": "2018-05-08T21:27:02.369Z",
        "updatedAt": "2018-09-26T08:58:04.994Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 1435,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1434,
        "firstPublishedAt": "2018-06-11T19:53:00.307Z",
        "publishedAt": "2018-09-26T08:58:04.994Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "The Callstack"
        },
        "body": {
          "en-US": "### Overview\n\nA call stack basically tracks where you are in a program. For instance, when a program reaches a function, it adds that entry (called a 'stack frame') to the call stack. When the function returns, its stack frame is moved off of the call stack. \n\n\n### Examples\n\n    function foo (x) {\n      console.log(x);\n     }\n    \n    function bar (x){\n      foo (x);\n     }\n    \n    bar(\"hi\");\n    \nFor the code above the callstack would look like this:\n\n![Callstack 1](//images.ctfassets.net/3r3os8le32yo/cg6Y2FEPQIUIu4CkGMsUs/1df0ce7f53335cbccddabc4b75f4b03e/Callstack_1.png)\n\n\n    function tip (x) {\n      return x * .2\n     )\n     \n     function totalBill (x) {\n       var tip = tip(x);\n       console.log(x += tip);\n      }\n      \n     totalBill(25);\n     \n That time the callstack would look like this:\n \n ![Callback Example 2](//images.ctfassets.net/3r3os8le32yo/31s5QBbVIQSaAgwckAkiKE/9c4b2c226ddf426496d57722ad9e81f3/Callback_Example_2.png)\n \n \n###  So What\n\nJavascript is a single threaded language, meaning it can only do one thing at a time. Thus, the fucntion 'tip' has to be removed from the callstack before the function 'totalBill' can be returned in the example above. That's important because a function takes more time to return, its position on the call stack becomes very important to the user experience of an app or website.\n\nIt's also important to understand the call stack when an app or website is recieving data  from a 3rd party (via an api call for instance), so the data is available when necessary during the program."
        },
        "date": {
          "en-US": "2018-06-11"
        },
        "slug": {
          "en-US": "the-callstack"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "370vWdPqaAqyq4cA4cA6c4",
        "type": "Entry",
        "createdAt": "2018-06-12T15:31:27.810Z",
        "updatedAt": "2018-09-26T09:04:23.681Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 467,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 466,
        "firstPublishedAt": "2018-06-12T15:43:21.589Z",
        "publishedAt": "2018-09-26T09:04:23.681Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Function Signatures"
        },
        "body": {
          "en-US": "A function signature defines inputs or outputs of a function. Signatures could include:\n\n- Parameters and their data types\n- A return value and type\n- Exceptions\n\nAn example that I ran up against today was the reduce method. \n\n    myArray.reduce(function (groups, item) {\n      \n      })\n      \nGroups will always be the accumulator, while items will always be the current item in the array that the method is iterating over. It doesn't matter that the parameters are not defined because the reduce method has a signature.\n"
        },
        "date": {
          "en-US": "2018-06-13"
        },
        "slug": {
          "en-US": "function-signatures"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2tEalxecYEYco6uoUuSIGi",
        "type": "Entry",
        "createdAt": "2018-06-14T12:58:49.172Z",
        "updatedAt": "2018-09-26T09:04:44.955Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 438,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 437,
        "firstPublishedAt": "2018-06-14T13:31:35.851Z",
        "publishedAt": "2018-09-26T09:04:44.955Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Events"
        },
        "body": {
          "en-US": "Finally grasped what an event was today. Its anything included in the event interface happens on the DOM. Some are user generated, like a key stroke, others are generated differently such as a succesful api call. Each event is represented by an object containing all of methods and properties common to all events, as well.\n\nWhen an event is bound to a handler (any function) with an event listener, the event object is automatically passed to the handler as an argument. For example:\n\n    function example (e) {\n      console.log(e)\n     };\n    \n    window.addEventListener('load', example);\n    \nThe function example would console log the event object for the window loading."
        },
        "date": {
          "en-US": "2018-06-14"
        },
        "slug": {
          "en-US": "events"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1MRMjxjHzuQM2IqwYs4qaa",
        "type": "Entry",
        "createdAt": "2018-06-16T21:58:17.112Z",
        "updatedAt": "2018-09-26T08:57:02.575Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 434,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 433,
        "firstPublishedAt": "2018-06-25T13:32:47.821Z",
        "publishedAt": "2018-09-26T08:57:02.575Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Truthy"
        },
        "body": {
          "en-US": "A truthy value is anything considered true when evaluated as a boolean (falsy is the opposite of course). Really nice to have a clear grasp of truthy because many array methods ouput a truthy or falsy value."
        },
        "date": {
          "en-US": "2018-06-18"
        },
        "slug": {
          "en-US": "truthy"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "21EtworDRG8Wq8MCmAiocM",
        "type": "Entry",
        "createdAt": "2018-06-17T09:00:46.338Z",
        "updatedAt": "2018-09-26T09:04:55.555Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 378,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 377,
        "firstPublishedAt": "2018-06-17T09:06:49.796Z",
        "publishedAt": "2018-09-26T09:04:55.555Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Curly Braces in Arrow Functions"
        },
        "body": {
          "en-US": "When writing an arrow function without curly braces, the function has a 'consice body' which means that the expression implicitly returns a value. (This only works if there is a single expression on the right side of your arrow).\n\nThat means that this function: \n\n    arrays.reduce((accum, current) => {\n      return accum.concat(current)} , []);\n      \n\nIs equal to this function:\n\n    arrays.reduce((accum, current) => accum.concat(current) , [])\n    \nDespite the second never explicitly telling the expression on the right side of the arrow to return a value."
        },
        "date": {
          "en-US": "2018-06-20"
        },
        "slug": {
          "en-US": "curly-braces-in-arrow-functions"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "19jY26zWN4Ay8EQQSEGIQY",
        "type": "Entry",
        "createdAt": "2018-06-19T14:33:30.544Z",
        "updatedAt": "2018-09-26T08:57:32.159Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 10,
        "version": 1095,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1094,
        "firstPublishedAt": "2018-06-19T14:48:03.114Z",
        "publishedAt": "2018-09-26T08:57:32.159Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Create a 'drag' event listener"
        },
        "body": {
          "en-US": "There is no event for 'dragging' an element, such as the volume control on a video. However, this can be skirted by using a combination of the mousemove event and a flag variable. \n\nThe mousemove event is triggered anytime the cursor moves across a specified element. Very similar to draggging, only without holding the mouse down. So we can use mousemove to trigger a handler function (the example below is missing some context, but it is a snippet written to changing the volume of a video). \n\nNext, we can use a flag variable (is dragging) to return the handler right away when set to false. That way mousemove won't trigger the function on its own. \n\nFinally, we can add two separate event listeners on mousedown and mouseup with a simple inline function that changes the value of isDragging. So we end up with a function that is only called while the mouse is down and moving over an element, or 'dragging'.\n\nWe also need to add a listener for mouseout because when the mouse leaves the element, mouseup will no longer be tracked, meaning that the boolean values in each of the inline functions is effectively switched. \n     \n    let isDragging = false;\n    function dragRangeUpdate() {\n      if (!isDragging) return;\n      video[this.name] = this.value;\n    }\n    \n    range.addEventListener('mousedown', () => isDragging = true))\n    range.addEventListener('mouseup', () => isDragging = false))\n    range.addEventListener('mouseout', () => isDragging = false))\n    range.addEventListener('mousemove', dragRangeUpdate))"
        },
        "date": {
          "en-US": "2018-06-22"
        },
        "slug": {
          "en-US": "create-a-drag-event-listener"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "3oWYqtXLuosumUaooeGM2K",
        "type": "Entry",
        "createdAt": "2018-06-25T13:33:28.659Z",
        "updatedAt": "2018-07-01T11:47:51.764Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "version": 998,
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Prototypes, Constructors"
        },
        "body": {
          "en-US": "Javscript is an object-oriented language, meaning its main method of organization is using objects. The idea behind such a structure is to split a program into smaller independent pieces that are responsible for managing their own state, to reduce complexity. \n\nEach object contains a set of properties and methods. Some of these properties and methods may have been added to an object after it was created, and some of them may have been derived __from another object's prototype__. For example:\n\n    var test = {};\n    console.log(test.tostring());\n    //--> [object, Object]\n\nIn the example above a property was pulled out of an empty object. The only reason this is possible is that test is constructed using the Object.protoype (kind of like the oldest ancestor of all objects in existence). The object prototype contains a bunch of properties that are included in additional objects when they are created (in the _proto property_).\n\nAn new objects prototype is, however, not limited to the Object.prototype:\n\n    var tree = {class: \"tree\"};\n    function treeProto(type) {\n      let tree = Object.create(tree);\n      tree.type = type;\n      return tree;\n    }\n\n    "
        },
        "date": {
          "en-US": "2018-06-25"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "3HP99Aedm80G84M8uE2I4e",
        "type": "Entry",
        "createdAt": "2018-06-27T08:34:09.280Z",
        "updatedAt": "2018-09-26T09:41:54.483Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 1278,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1277,
        "firstPublishedAt": "2018-06-27T08:53:17.329Z",
        "publishedAt": "2018-09-26T09:41:54.483Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Array and Object References"
        },
        "body": {
          "en-US": "It is important to understand the difference between a copy and a reference of an array or object. Changes to a reference result in changes of the original array, whereas changes to a copy do not effect the original array.\n\nA reference looks as so:\n\n    var array = [a, b, c]\n    var array2 = array\n    \narray2 is referencing the original variable array. Thus, when a change is made to array2 it will also affect array:\n\n    array2.slice(1,2)\n    console.log(array2)\n    // --> [a, b]\n    console.log(array)\n    // --> [a, b]\n    \nThe reason for the changes to both is that only one array exists despite the fact that it is referenced by two variables. In order to avoid this happening the original array needs to be copied:\n\n    var array2 = [...array]\n    array2.splice(1,2)\n    console.log(array2)\n    // --> [a, b]\n    console.log(array)\n    // --> [a, b, c]\n    \nBy spreading the original array into the variable array2 a copy was made, thus array2 is no longer referencing array.\n\nReferences and copies for objects are handled the same way, with one important exception. Changes made to a copied object __more than one level deep are still applied to the original object__:\n\n    var me = {\n      age: 23,\n      hair: brown,\n      parents: {\n        mother: 'Rose',\n        father: 'John'\n      }\n    };\n    var doppelganger = Object.assign({}, me); //Copied me object to doppelganger\n    doppelganger.father = 'Ricky';\n    console.log(me.father);\n    // --> Ricky\n    \nAvoiding this requires a function that copys each level of the object.\n"
        },
        "date": {
          "en-US": "2018-08-10"
        },
        "slug": {
          "en-US": "array-and-object-references"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2ttvbw0BswQUo4OQyAQ82q",
        "type": "Entry",
        "createdAt": "2018-06-29T11:57:27.012Z",
        "updatedAt": "2018-09-26T09:05:11.419Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 680,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 679,
        "firstPublishedAt": "2018-06-29T12:13:13.546Z",
        "publishedAt": "2018-09-26T09:05:11.419Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Event Propagation"
        },
        "body": {
          "en-US": "I have long wondered what the property 'bubbles', in the event object means, and I finally have an answer.\n\nEvent propogation is the movement of an event 'up' through nested elements in the DOM. For instance, if a link is wrapped in a div:\n\n    <div>\n      <a href=\"#\">Link</a>\n    </div>\n    \nAnd a user clicks the link, a click event will 'bubble up' from the link to the div and ultimately the document element. So, if there is a click listener on the div, it will call the associated function when the link is clicked because the link is nested in the div.\n\nThere is a very handy method .stopPropagation() that can be called on an event object that will stop it from bubbling up to container elements (the following function would be bound to an event listener on a nested element):\n\n    event => event.stopPropagation"
        },
        "date": {
          "en-US": "2018-06-29"
        },
        "slug": {
          "en-US": "event-propagation"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2MBctMbBLWGumEASOMO2oK",
        "type": "Entry",
        "createdAt": "2018-07-07T12:00:20.909Z",
        "updatedAt": "2018-10-07T18:12:58.451Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 6,
        "version": 627,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 626,
        "firstPublishedAt": "2018-07-07T12:23:00.715Z",
        "publishedAt": "2018-10-07T18:12:58.451Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Pure Functions"
        },
        "body": {
          "en-US": "A pure function is one that:\n\n\n1. Returns the same output everytime it is called with the same input\n2. Creates no side effects, meaning that it doesn't impact a state outside of its scope. For example, no network or database calls, or console logs.\n3. They are immutable, meaning that they don't alter the data passed into them.\n\nAn example of an impure function is as follows: \n    \n    var items = []\n    function cartUpdate (newItems){\n      newItems.forEach( item => {\n        items.push(item)\n      })\n    }\n\nThe function interacts with mutates a variable outside of its scope, thus it is impure.\n\nThe same result can be accomplished using a pure function as such:\n\n    var items = []\n    function cartUpdate (newItems){\n      var cartCopy = items.splice();\n      newItems.forEach( item => {\n        cartCopy.push(item)\n      })\n      return cartCopy\n    }"
        },
        "date": {
          "en-US": "2018-07-07"
        },
        "slug": {
          "en-US": "pure-functions"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5XCc0DRqa4Uw2M66GOAwsi",
        "type": "Entry",
        "createdAt": "2018-07-13T09:06:38.821Z",
        "updatedAt": "2018-09-26T09:05:23.829Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 982,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 981,
        "firstPublishedAt": "2018-07-13T09:46:13.000Z",
        "publishedAt": "2018-09-26T09:05:23.829Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Continuous Integration"
        },
        "body": {
          "en-US": "Say a developer is building a project by themselves. It looks something like this:\n\n![Simple Project](//images.ctfassets.net/3r3os8le32yo/4vZpBx6Us0aqaOSwyEycY8/303a1fbced4bfb131ce5b0ed20fbbe09/SImple_Server.png)\n\nIf the project gets more complicated and requires more people to work on it, it will look something like this: \n\n![More complicated project](//images.ctfassets.net/3r3os8le32yo/5AVAtfg6re0gmAyksQcUWE/a904bddcd5e5c431859d06ef54b4c808/More_complicated_project.png)\n\nThe team adds git for version control, so when they make changes to the code it doesn't throw the entire project out of sync and break it.\n\nWhat if the project gets even more complicated with multiple teams of developers working on seperate elements? Then it looks something like this:\n\n![Very complicated project](//images.ctfassets.net/3r3os8le32yo/4paj3fbDLG2EkggWI6SMyI/2604ffaccb282b9d3b6e4a06ce25296a/Very_complicated_project.png)\n\nEnter continuous integration. Each time one team pushes an update to grid that update is tested against a script written for the continuous integration tool. That script is designed to make sure that updates to code by one group of developers remains compatible with the code that every other team has written.\n\nBefore this existed teams would all write their respective features, and then stop before  a release to make sure the features were compatible, meaning that progress on the software would grind to a halt for long periods of time. CI tools avoid that dead time, by testing compatability...continuously.\n"
        },
        "date": {
          "en-US": "2018-07-13"
        },
        "slug": {
          "en-US": "continuous-integration"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6ijnmN6Y5qaaSSG8CsMwMC",
        "type": "Entry",
        "createdAt": "2018-07-13T12:49:43.321Z",
        "updatedAt": "2018-09-26T09:05:35.742Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 567,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 566,
        "firstPublishedAt": "2018-07-13T13:11:05.663Z",
        "publishedAt": "2018-09-26T09:05:35.742Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Serverless (Lambda Functions)"
        },
        "body": {
          "en-US": "FaaS or serverless architecture, saves developers the trouble of configuring a server (apparent from the name) to deploy an application or website. In actuality, of course, the application is not serverless. The server is just maintained by someone else (probably amazon).\n\nThe way it works is that I can write a function in any language compatible with AWS Lambda. Then I upload that function to AWS Lambda. Upon being uploaded the function is given a live url, which can be called using client side js. \n\nSo all the benefits of dynamic application without any of the hassle typically required for maintaining a server."
        },
        "date": {
          "en-US": "2018-09-10"
        },
        "slug": {
          "en-US": "serverless-lambda-functions"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5intCTfMHu4Y8e0Ews6Gsg",
        "type": "Entry",
        "createdAt": "2018-07-15T09:50:43.509Z",
        "updatedAt": "2018-10-07T18:12:41.251Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 2449,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2448,
        "firstPublishedAt": "2018-07-15T10:20:26.312Z",
        "publishedAt": "2018-10-07T18:12:41.251Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Content Structure - Topics and Assemblies"
        },
        "body": {
          "en-US": "Traditionally, content has been designed for a single layout. This makes sense, as content structure largely evolved out of print media, and print media is static. The page of a magazine, for instance, will never change size or shape.\n\nWhen we started reading stuff on the internet, however, things changed. A webpage on a desktop is not the same as a webpage on a phone, and if they have the same layout one of them will be very hard to read. So, people started designing layouts to serve content on a phone, on web pages, a tablet, and everything in between. Each layout, despite containing the same content, being its own seperate entity. This approach is still primarily used today thoug it is wildly inefficient.\n\nWhy is it inefficient? The content for different layouts is always being duplicated. For example, if someone is publishing a news article to an online media outlet as described above, they'd have to recreate the same author each time they publish for a different layout.\n\nSo, rather than making a single entity for every single possible layout its far better to structure content modularly. Enter topics and assemblies.\n\nTopics are:\n\n- Always reusable\n- Independently understandable\n\nFor instance an event is a single understandable entity that might need to be displayed in different contexts.\n\nAssemblies:\n\n- Have fields for site navigation, metadata, and seo\n- Can be nested inside of other assemblies\n- Structure your content for presentation\n\nA good example of an assembly is a modular page layout or an events carousel.\n\nWhile a topic is a block of content an assembly is a collection of references to that content. The beauty of this structure, that unlike content trapped in single page layouts, topics added to assemblies are always reusable. So for the example above with the new organization. Rather than recreating the author, an editor could simply plug the author topic into each relevant assembly with the click of a button.\n\nBelow is an exmample of topics and assemblies (left) vs. the single page approach, taken from [this article](https://www.contentful.com/r/knowledgebase/topics-and-assemblies/ \"Topics and Assemblies\")\n\n![Topics Assemblies3](//images.ctfassets.net/3r3os8le32yo/1QcSo2mb84wyo0e8mA6Mum/3cf69d896c948e4e06bf5b4f0b1e0fe7/Topics_Assemblies3.jpg)"
        },
        "date": {
          "en-US": "2018-07-15"
        },
        "slug": {
          "en-US": "content-structure-topics-and-assemblies"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "48BYBDkgrmoEeCoIEMeaYq",
        "type": "Entry",
        "createdAt": "2018-07-17T07:27:29.748Z",
        "updatedAt": "2018-10-07T18:12:50.081Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 2476,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2475,
        "firstPublishedAt": "2018-09-25T13:02:00.516Z",
        "publishedAt": "2018-10-07T18:12:50.081Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Encapsulation"
        },
        "body": {
          "en-US": "Encapsulation is the idea that the data of an object should not be directly exposed. This is helpful in writing more maintainable and flexible code, by guiding callers to use methods to set values of the object's properties, rather than accessing the object's properties directly. In doing so, we can insure code is used the way it was intended.\n\nHere is an object that is not encapsulated: \n\n    let dog = {\n      breed: 'Golden Retriever'\n    }\n\nThe breed property in dog is directly accessible making this possible:\n\n    alert(dog.breed) // prints Golden Retriever\n    dog.breed = 'Pug'\n    alert(dog.breed) // prints Pug\n    \nNothing problematic about that...unless a caller does something like this:\n\n    dog.breed = 67\n    alert(dog.breed) // prints 67\n    \n67 is not a valid breed of dog, but since the dog object isn't encapsulated the caller can set the breed property to anything he or she wants, directly. So we could try this:\n\n    let dog = {\n      breed: 'Golden Retriever',\n      setBreed: function (newValue) {\n        let testExp = new RegExp('\\d+');\n        let test = testExp.test(newValue);\n        if (test) {\n          alert(\"Invalid Breed\");\n        }\n        else {\n          this.breed = newValue;\n        }\n      }\n      getBreed: function () {\n        return this.breed;\n      }\n    }\n    \nNow we've given callers a way to access and edit the data without directly touching it, thus, giving us a layer of control. But, this still allows callers to directly change the breed if they were so inclined.\n\nSo for full the encapsulation, one final step is necessary:\n\n    let dog = function () {\n      let breed = 'Golden Retriever';\n      let testExp = new RegExp('\\d+');\n      \n      return {\n        setBreed: function (newValue) {\n          let test = testExp.test(newValue);\n          if (test) {\n            alert(\"Invalid Breed\");\n          }\n          else {\n            breed = newValue;\n           }\n        }\n        getBreed: function () {\n          return breed;\n        }\n      }; //end of return\n    }();\n \nBy making use of function scope, and closures we can fully prevent callers from directly accessing our data. Since we have wrapped dog in an IIFE function all of the variables within it are not exposed to the global scope, but the methods setBreed and getBreed still have access to the variable breed within the scope of the function. The fact that the function executes immediately also means that our outer variable dog is ultimately the object that is returned with the setBreed and getBreed methods, thus allowing access to the data without being able to edit it directly.\n\n    console.log(dog.getBreed()) //prints Golden Retriever\n\n\n\n"
        },
        "date": {
          "en-US": "2018-09-26"
        },
        "slug": {
          "en-US": "encapsulation"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4ZtOcWL8f6C2WoIESGMiaS",
        "type": "Entry",
        "createdAt": "2018-07-24T14:01:50.478Z",
        "updatedAt": "2018-09-26T09:40:43.119Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 804,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 803,
        "firstPublishedAt": "2018-08-06T10:45:38.880Z",
        "publishedAt": "2018-09-26T09:40:43.119Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Nth Child"
        },
        "body": {
          "en-US": "Nth child is a psuedo selector that allows you to select the children of a parent element. I came across it when I was trying to figure out how to set up a two column layout, and I wanted the last every other row to go the opposite direction as shown below!\n\n[Columns Reversed](//images.ctfassets.net/3r3os8le32yo/1MHoGCZefCO8UMiwGywsqQ/07f27364b49aa971fc6756d8ef9157a9/Columns_Reversed.png) \n\nThis is achieved as such, asumming that the div wrapping the rows has a class of \"container\" and each row has a class of \"row\":\n\n    .container .row:nth-child(2n+2) {\n      flex-direction: row-reverse;\n     }\n\nn starts at zero and continues to iterate for every child within the container like this:  \n\n1. (2 x 0) + 2 --> 2nd row\n2. (2 x 1) + 2 --> 4th row\n3. (2 x 2) + 2 --> 6th row\n\nIt applies the css to each child element at an index that falls within that is calculated using the formula given to nth-child. For (2n+2) it is every other row as shown above.\n\nAlso important to note that the index of the children starts at 1 and not 0.\n\n[https://css-tricks.com/examples/nth-child-tester/](https://css-tricks.com/examples/nth-child-tester/# \"nth-child tester\")\n"
        },
        "date": {
          "en-US": "2018-07-24"
        },
        "slug": {
          "en-US": "nth-child"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "uvYYmdfzbMGosMai4ssYu",
        "type": "Entry",
        "createdAt": "2018-07-25T12:39:30.110Z",
        "updatedAt": "2018-07-25T12:40:04.537Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "version": 91,
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Responsive Image Grid using Grid"
        },
        "body": {
          "en-US": "I designed a responsive image grid, and I never want to have to figure out how to do it again so I'm recording my steps now."
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1LlZSW7kTW4y0OEQMkqkaI",
        "type": "Entry",
        "createdAt": "2018-08-23T12:34:02.526Z",
        "updatedAt": "2018-09-26T09:41:12.140Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 914,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 913,
        "firstPublishedAt": "2018-08-27T17:53:52.707Z",
        "publishedAt": "2018-09-26T09:41:12.140Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "'Leaking' Globals - IIFE"
        },
        "body": {
          "en-US": "Leaking globals into your window object can result in naming conflicts. For example, if 10 developers are working on an application and one declares a function called 'getId' in the global namespace it is problematic because 'getId' could very likely be used to name a function in another context, resulting in bugs.\n\nA way to avoid this using a design pattern called IIFE (Immediately Invoked Function Expression), which wraps functions in a grouping operator - () - and makes it into a function expression by adding a () after the grouping operator. So the wrapped code exists with the scope of the grouping operator, meaning it doesnt affect the global scope.\n\n    (function () { \n    var name = \"Jack\";\n    })();\n    name // throws \"Uncaught ReferenceError: aName is not defined\" because aName is not       available outside of the scope of the anonymous function\n    \n    var result = (function () { \n    var name = \"Jack\"; \n    return name; \n    })(); \n\n    result; // \"Jack\" because the function has been turned into an expression that was       executed immediately returning \"Jack\""
        },
        "date": {
          "en-US": "2018-08-23"
        },
        "slug": {
          "en-US": "iife"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "24EKIuAOre20yua6KI4EUG",
        "type": "Entry",
        "createdAt": "2018-08-25T09:37:53.440Z",
        "updatedAt": "2018-09-18T13:24:28.877Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 456,
        "firstPublishedAt": "2018-08-25T09:38:47.362Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Absolute positioned tooltip"
        },
        "body": {
          "en-US": "When element is using position: aboslute, the offsets, top, left, right, bottom, are values compute relative to the elements containing box. So, to make a tooltip where that shows up below a word when hovered the following code could be used:\n\n    <div class=\"container\">\n      <p class=\"word\">Definition</p>\n      <div class=\"tooltip\">\n        <p> The definition of definition </p>\n      </div>\n    </div>\n    \n    \n    "
        },
        "date": {
          "en-US": "2018-08-25"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "25W9QwzXs4YQsukmuCG2su",
        "type": "Entry",
        "createdAt": "2018-08-27T16:20:14.252Z",
        "updatedAt": "2018-09-26T09:40:55.753Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 791,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 790,
        "firstPublishedAt": "2018-08-27T16:38:43.484Z",
        "publishedAt": "2018-09-26T09:40:55.753Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Hoisting"
        },
        "body": {
          "en-US": "Hoisting is the process of storing variables and function declarations into memory when javascript is being compiled. This allows a function to be called before it is declared in your code. For example: \n\n    catName(\"Chloe\");\n    \n    function catName(name) {\n      console.log(\"My cat's name is \" + name);\n    }\n    \n    //Output: My cat's name is Chloe\n    \nIt is critical to distinguish between declaration and iniitialization.\n\n    var = cat; //declaring cat\n    cat = \"Catmandenus\"; //initializing cat\n    \nFor reasons beyond me the javascript engine stores variable declarations in memory, but not their values (when they are intialized). So this happens: \n\n    function greeting() {\n      console.log(greeting);\n    }\n    \n    var greeting = \"hello friend\"\n    \n    //result --> undefined\n    \nWhen a variable is initialized before a function that uses it, the function returns an undefined value.\n\nUseful to know when thinking about scopes in Javascript"
        },
        "date": {
          "en-US": "2018-08-27"
        },
        "slug": {
          "en-US": "hoisting"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5vlw101E3ec6gasu80wU04",
        "type": "Entry",
        "createdAt": "2018-08-30T07:53:50.829Z",
        "updatedAt": "2018-08-30T07:54:14.902Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "version": 14,
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Asynchronous Programming"
        },
        "date": {
          "en-US": "2018-08-30"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "awizwboqPe8QWGS88emWs",
        "type": "Entry",
        "createdAt": "2018-09-05T09:37:43.005Z",
        "updatedAt": "2018-09-29T15:27:18.057Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 4,
        "version": 10,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 9,
        "firstPublishedAt": "2018-09-05T09:37:45.953Z",
        "publishedAt": "2018-09-29T15:27:18.057Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "CSS"
        },
        "slug": {
          "en-US": "css"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "EXS9mNkCVEyioOooAqGAs"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "1tNg5FoDLS6G4Q2SkCq8cy"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "4ZtOcWL8f6C2WoIESGMiaS"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "3puo7t4S7SoaaIcw4gI0SQ"
              }
            }
          ]
        },
        "iconClass": {
          "en-US": "fab fa-css3"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5IdnJrPC5aEQaau8a4qqys",
        "type": "Entry",
        "createdAt": "2018-09-05T09:37:43.040Z",
        "updatedAt": "2018-10-05T15:44:07.790Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 6,
        "version": 17,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 16,
        "firstPublishedAt": "2018-09-05T09:37:43.509Z",
        "publishedAt": "2018-10-05T15:44:07.790Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "JavaScript"
        },
        "slug": {
          "en-US": "javascript"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "3HP99Aedm80G84M8uE2I4e"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "4jTGVjJVz2gqMW2AW4Sa20"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "5XCc0DRqa4Uw2M66GOAwsi"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "19jY26zWN4Ay8EQQSEGIQY"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "21EtworDRG8Wq8MCmAiocM"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "48BYBDkgrmoEeCoIEMeaYq"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "2ttvbw0BswQUo4OQyAQ82q"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "2tEalxecYEYco6uoUuSIGi"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "370vWdPqaAqyq4cA4cA6c4"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "25W9QwzXs4YQsukmuCG2su"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "5zg9TGUlNYCA2y6KwGmsYQ"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "1LlZSW7kTW4y0OEQMkqkaI"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "2MBctMbBLWGumEASOMO2oK"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "4t1dH1AZnyKO8muik2cI8Q"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "6ijnmN6Y5qaaSSG8CsMwMC"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "7m3Yk812M024UgciqoKGWm"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "1MRMjxjHzuQM2IqwYs4qaa"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "4oN0Kq6ZYQYWiOw224sC4y"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "15xYkVd7tueOG2gM0A6MQs"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "1ukPU1IdwAgOuGauiuKs6c"
              }
            }
          ]
        },
        "iconClass": {
          "en-US": "fab fa-js"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4hvWimSNgAOOseSkeYwEgg",
        "type": "Entry",
        "createdAt": "2018-09-05T09:37:43.071Z",
        "updatedAt": "2018-09-26T14:01:46.349Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 8,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 7,
        "firstPublishedAt": "2018-09-05T09:37:45.615Z",
        "publishedAt": "2018-09-26T14:01:46.349Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "HTML"
        },
        "slug": {
          "en-US": "html"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "4jTGVjJVz2gqMW2AW4Sa20"
              }
            }
          ]
        },
        "iconClass": {
          "en-US": "fab fa-html5"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "EXS9mNkCVEyioOooAqGAs",
        "type": "Entry",
        "createdAt": "2018-09-06T17:00:13.640Z",
        "updatedAt": "2018-09-26T09:41:24.771Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 483,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 482,
        "firstPublishedAt": "2018-09-06T17:06:57.660Z",
        "publishedAt": "2018-09-26T09:41:24.771Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "flex-grow"
        },
        "body": {
          "en-US": "Flex grow can be assigned to items within a flex container. It tells the item how much space it should take up relative to other items in the container.\n\n    .flex-container {\n      display: flex;\n      width: 800px;\n    }\n    .col-7 {\n      flex-grow: 7;  \n    }\n    .col-2 {\n      flex-grow: 2; \n    }\n    .col-3 { \n      flex-grow: 3;\n    }\n    \nIn the example above col-7 takes up 7/12 of the 800px given by the container. Col-2 takes 2/12, and col-3 takes 3/12. \n\nIf one element is assigned a flex-grow within a container and the others are not, the element assigned a flex-grow will take up all of the space, as the default setting of flex-grow is 0.\n\nReally useful when creating a column layout using flexbox."
        },
        "date": {
          "en-US": "2018-09-06"
        },
        "slug": {
          "en-US": "flex-grow"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4jTGVjJVz2gqMW2AW4Sa20",
        "type": "Entry",
        "createdAt": "2018-09-06T17:08:08.476Z",
        "updatedAt": "2018-09-26T09:06:35.348Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 486,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 485,
        "firstPublishedAt": "2018-09-06T17:13:43.201Z",
        "publishedAt": "2018-09-26T09:06:35.348Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Cache busting"
        },
        "body": {
          "en-US": "Sometimes when websites are updated, users don't recieve the update because their browser is using cached files to render it. This can be problematic, for instance if the update removes or changes files that the cached files reference, causing the website to break for that user. To avoid this a technique called cache busting can be employed.\n\nCache busting forces a browser to redownload files by changing their names. The best way to do so is simply adding a query string to the end of the original file name. \n\n    src=\"index.js\" => src=\"index.js?ver=new\"\n\nThe browser considers it a different file, but doing so doesn't require the file name to be changed."
        },
        "date": {
          "en-US": "2018-08-16"
        },
        "slug": {
          "en-US": "cache-busting"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5zg9TGUlNYCA2y6KwGmsYQ",
        "type": "Entry",
        "createdAt": "2018-09-13T13:39:59.348Z",
        "updatedAt": "2018-09-26T09:41:39.842Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 889,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 888,
        "firstPublishedAt": "2018-09-13T14:02:47.474Z",
        "publishedAt": "2018-09-26T09:41:39.842Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Javascript as a progressive enhancement"
        },
        "body": {
          "en-US": "Javascript usually lives at the bottom of a page (or at least it should if it is interacting with the DOM), meaning that it loads slower than anything else on the page. So, if your user is on a slower network and you are relying heavily on Javascript it is going to significatntly decrease the performance of your site or app.\n\nOr, the browser your user is on might decide to get rid of JS altogther, such as with Chrome's new [NOSCRIPT Intervention](https://timkadlec.com/remembers/2018-09-06-chromes-noscript-intervention/ \"NOSCRIPT Intervention\"), which prevents JS from loading on 2G or slower networks, or if the user has enabled 'Data Saver' in Chrome. This could mean your website or app completely fails to render depending on the amount of JS used.\n\nI think the author of the post linked above has the perfect attitude towards JS in treating it as a progressive enhancement. It should be as sepearate from the core of presentation layer of your content as possible."
        },
        "date": {
          "en-US": "2018-09-13"
        },
        "slug": {
          "en-US": "javascript-as-a-progressive-enhancement"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1tNg5FoDLS6G4Q2SkCq8cy",
        "type": "Entry",
        "createdAt": "2018-09-20T07:58:54.727Z",
        "updatedAt": "2018-09-26T08:56:18.399Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 1494,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1493,
        "firstPublishedAt": "2018-09-20T08:24:02.503Z",
        "publishedAt": "2018-09-26T08:56:18.399Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "GPS"
        },
        "body": {
          "en-US": "GPS (Global, Page, Section) is a system to organize CSS, thereby making it more readable.  At the same time it helps prevent scope leaks where a class is declared twice within a website's/app's CSS, thus causing unintended behavior. It breaks CSS into three categories:\n\n1. Global Level\n2. Page Level\n3. Section Level\n\n\n### Global Level\n\nAny style that is going to be repeated across the site. For instance, all of your h1 tags will probably look the same (as they should) and thus they would be a good candidate for a global style. All global styles should be prefixed with 'g-'.\n\n\n### Page Level\n\nStyles that are applied to a specific page within the site. In a traditional website pages are defined as an entity that needs to be loaded. In an SPA a page is any single view. I think this can be understood intuitively. Page specific styles apply locally to all elements within a page. Page level elements are prefixed with a 'p-'. All page specific css should also be nested under a page level id.\n\n### Section Level\n\nStyles applied to a section within a page are section level. Take for instance a careers page. It will probably have a section describing a company's core tenants, followed by a section that lists jobs. Section level CSS could be applied to each. Section level CSS should be nested under two ids, the page and the section. That way if another page has a section with the same name it won't cause a conflict, and will still allow you to write intuitively named code. *If ever section level css needs to be reused __Do Not Copy Paste Into a New Section__.* Pull that code up to the page level.\n\n### Media Queries\n\nMedia queries should be handled inline as opposed to being dumped at the bottom of a CSS doc, or put underneath styles. For example:\n\n    .box {\n      background-color: #000;\n      \n      @media (min-width: 50em) {\n        background-color: #fff;\n      }\n    }    \n \n Media queries should also be sized around content. Don't use breakpoints based on standard phone and tablet size. That shit doesn't work. Just drag your browser window around until stuff gets funky and then write a media query for it.\n \n\n"
        },
        "date": {
          "en-US": "2018-09-20"
        },
        "slug": {
          "en-US": "gps"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2tbJWSZOVqigMYiyimo0uq",
        "type": "Entry",
        "createdAt": "2018-09-25T10:01:55.127Z",
        "updatedAt": "2018-09-26T08:56:35.635Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 29,
        "firstPublishedAt": "2018-09-25T10:02:32.598Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Object Oriented Programming"
        },
        "body": {
          "en-US": "Just to make sure the basics are in place -- some object oriented programming (OOP) terminology:\n\n- Namespace: Container that lets devs bundle functionality under a unique (ideally semantic) identifier.\n- Class: Template for object properties and methods.\n- __Object: Instance of a class__\n- Property: Characteristic of object like color.\n- Method: Capability of object like sing.\n- Constructor: Method called at right when an object is instantiated. 'Constructs' object.\n- Instatiate: Create new instance of (object)\n- Encapsulation: A method of bundling data and methods that use the data.\n- Abstraction: Hiding complexity in functions to make code more understandable.\n- Polymorphism: Different classes defining the same method/property"
        },
        "slug": {
          "en-US": "object-oriented-programming"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4t1dH1AZnyKO8muik2cI8Q",
        "type": "Entry",
        "createdAt": "2018-09-25T10:18:51.474Z",
        "updatedAt": "2018-09-26T08:55:11.718Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 9,
        "version": 1965,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1964,
        "firstPublishedAt": "2018-09-25T12:34:17.921Z",
        "publishedAt": "2018-09-26T08:55:11.718Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Regular Expressions"
        },
        "body": {
          "en-US": "Regular expressions are patterns you can create in javascript to match strings. They are a very flexible tool, thus also quite abstract, so here is the [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions \"MDN Documentation\") for reference.\n\n\n### Creating a regular expression\n\n__A regular expression is a pattern, not the string itself__. It is key to have the idea of an expression and a string separated before using regular expressions.\n\nThe process for working with them goes something like this.\n\n__First__ create a new regular expression (the pattern you want to use):\n\n    let exp = new RegExp('abc');\n\n__Second__ get your string:\n\n    let exp = new RegExp('abc');\n    let string = 'I met a fellow named Babcock the other day.'\n    \n__Third__ use a method that works with regular expressions to combine the string and RegExp in a way that produces meaningful information:\n\n    \n    let exp = new RegExp('abc')\n    let string = 'I met a fellow named Babcock the other day.'\n    let test = exp.test(string) // returns true\n\n\n### Specical characters\n\nSpecial characters allow you to create abstract patterns with regular expressions. For example:\n\n    let exp = new RegExp('\\d+\\.\\d*')\n\nThe above expression could be used to match any decimal over with a value greater than 1 or less than -1. \\d+ translates to any digit 0-9 one or more times. \\. is the literal *.*, which needs a preceeding backslash as *.* is a special character, and the backslash tells our RegExp to treat it as a literal. \\d* is any digit 0-9 zero or more times. \n\nThere are a ton of special characters which can be referenced [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_special_characters \"Special Characters Section of MDN Guide\")\n\n\n\n### Working with regular expressions\n\nTo reiterate, a regular expression is simply a pattern that can be used together with a string to produce a value. The vehicle that allows the two to work togehter are methods. A list of methods that except regular expressions can be found [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Working_with_regular_expressions \"MDN Working with Regular Expressions\").\n\n### Using Parentheses with regular expressions\n\nParentheses save matches to a regular expression and return them as an array. Information on using them found [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_parenthesized_substring_matches \"MDN documentation for parenthesized substring matches\")"
        },
        "date": {
          "en-US": "2018-09-25"
        },
        "slug": {
          "en-US": "regular-expressions"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5f07CGw7jqCAI2aMykQqa0",
        "type": "Entry",
        "createdAt": "2018-09-26T09:39:26.505Z",
        "updatedAt": "2018-09-26T13:24:56.245Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 26,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 25,
        "firstPublishedAt": "2018-09-26T09:40:19.323Z",
        "publishedAt": "2018-09-26T13:24:56.245Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Information Architecture"
        },
        "slug": {
          "en-US": "information-architecture"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "5intCTfMHu4Y8e0Ews6Gsg"
              }
            }
          ]
        },
        "iconClass": {
          "en-US": "fas fa-sitemap"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4oN0Kq6ZYQYWiOw224sC4y",
        "type": "Entry",
        "createdAt": "2018-09-27T12:07:15.628Z",
        "updatedAt": "2018-09-27T12:17:29.078Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 581,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 580,
        "firstPublishedAt": "2018-09-27T12:16:54.567Z",
        "publishedAt": "2018-09-27T12:17:29.078Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "JS Backticks (Template Literals)"
        },
        "body": {
          "en-US": "Backticks in javascript allows you to construct strings with an embedded expression. The backticks act exactly like single or double quotes, but they can include an expression with the following syntax:\n\n    `Hello, my name is ${name}.`\n\nThe default use of template literals passes the expression and the other parts of the string to a function that concatenates them.\n\nOne of the most useful things about template literals is a new syntax for [expression interpolation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Expression_interpolation) (as shown above). It makes the combination of strings and expressions to be evaluated much more readable.\n\nFull documentation is [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Expression_interpolation)."
        },
        "date": {
          "en-US": "2018-09-27"
        },
        "slug": {
          "en-US": "js-backticks-template-literals"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1P7qGEDu1yYWcgEEO6c2ma",
        "type": "Entry",
        "createdAt": "2018-09-27T15:54:50.118Z",
        "updatedAt": "2018-09-29T13:46:35.509Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 12,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 11,
        "firstPublishedAt": "2018-09-27T15:55:47.658Z",
        "publishedAt": "2018-09-29T13:46:35.509Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Meetup Dashboard"
        },
        "url": {
          "en-US": "https://meeetup-dashboard.netlify.com/"
        },
        "cover": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "6OfR6OF5bGWqyqGyciCmWA"
            }
          }
        },
        "github": {
          "en-US": "https://github.com/martin3walker/meetup-dashboard"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2tmBe2x8ZCaYckeeMQA2ms",
        "type": "Entry",
        "createdAt": "2018-09-27T15:56:39.444Z",
        "updatedAt": "2018-10-01T18:56:04.999Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 176,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 175,
        "firstPublishedAt": "2018-09-27T15:58:30.543Z",
        "publishedAt": "2018-10-01T18:56:04.999Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "introduction"
          }
        }
      },
      "fields": {
        "headline": {
          "en-US": "Hi, I'm Martin, and I'm excited about Frontend Development and UX"
        },
        "picture": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "4nW0K4ZkM08uS2QQ2QUYkW"
            }
          }
        },
        "description": {
          "en-US": "I'm teaching myself how to use, HTML, CSS, and Javascript to create reliable and pleasant user experiences on the web. I discovered that I really enjoy programming in June 2018. This is what I've been up to since then."
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6x4eQ40qHuiOmGmCKKQssE",
        "type": "Entry",
        "createdAt": "2018-09-28T18:17:09.063Z",
        "updatedAt": "2018-09-29T13:42:37.638Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 23,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 22,
        "firstPublishedAt": "2018-09-28T18:18:25.455Z",
        "publishedAt": "2018-09-29T13:42:37.638Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "project"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Mobile Friendly Menu"
        },
        "url": {
          "en-US": "https://codepen.io/martin3walker/full/VGQWxz/"
        },
        "cover": {
          "en-US": {
            "sys": {
              "type": "Link",
              "linkType": "Asset",
              "id": "2z5MlB2PGsGkCcQYeagcom"
            }
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "8LvpdlgMqkwEM0A0wyOU2",
        "type": "Entry",
        "createdAt": "2018-09-29T12:16:05.720Z",
        "updatedAt": "2018-10-08T09:53:09.949Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 44,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 43,
        "firstPublishedAt": "2018-09-29T12:16:55.530Z",
        "publishedAt": "2018-10-08T09:53:09.949Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "introTils"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Intro TILs"
        },
        "tils": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "48BYBDkgrmoEeCoIEMeaYq"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "2MBctMbBLWGumEASOMO2oK"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "1ukPU1IdwAgOuGauiuKs6c"
              }
            }
          ]
        },
        "ctaText": {
          "en-US": "See all TILs"
        },
        "ctaSlug": {
          "en-US": "/til-index.html"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "3puo7t4S7SoaaIcw4gI0SQ",
        "type": "Entry",
        "createdAt": "2018-09-29T15:20:07.653Z",
        "updatedAt": "2018-09-29T15:26:58.218Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 550,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 549,
        "firstPublishedAt": "2018-09-29T15:26:58.218Z",
        "publishedAt": "2018-09-29T15:26:58.218Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Object Fit"
        },
        "body": {
          "en-US": "MDN's docs describe [object-fit](https://devdocs.io/css/object-fit) as \"how the contents of a replaced element, such as an img or video, should be resized to fit its container\". To me that is confusing. It sounds like an image in a div would conform to the size of the div. However, the word container is referring to the original image itself.\n\nSo if you were to apply object-fit: cover to an image with height: 400px and width: 100% in a div with a height of 500px, the replacement image would maintain the original's height:400px, while adjusting width to fit the size of the container.\n\nIt would also maintain the original image's aspect ratio, which is the point of object-fit."
        },
        "date": {
          "en-US": "2018-09-29"
        },
        "slug": {
          "en-US": "object-fit"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "25VimCBzOIkw4yu6ky8IAu",
        "type": "Entry",
        "createdAt": "2018-10-01T09:45:05.937Z",
        "updatedAt": "2018-10-01T10:25:24.114Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "version": 371,
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Content Delivery API (JS SDK)"
        },
        "body": {
          "en-US": "The content delivery API fetches data from Contentful. It is read only. The fetched content is delivered by the user's nearest server on Contentful's CDN.\n\nThis is the most basic code snippet to make a successful call to the content delivery API:\n\n    //import module\n    const contentful = require(\"contentful\");\n    \n    //create an instance of contentful with the correct credentials\n    const client = contentful.createClient({\n    space: \"developer_bookshelf\",\n    accessToken: \"0b7f6x59a0\"\n    });\n    \n    //return a promise of an entry with the getEntry method\n    client\n    .getEntry(\"5PeGS2SoZGSa4GuiQsigQu\")\n    .then(entry => console.log(entry))\n    .catch(err => console.log(err));\n\n"
        },
        "slug": {
          "en-US": "content-delivery-api-js-sdk"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "16z0s7g6fiSqkK0kWgCWOG",
        "type": "Entry",
        "createdAt": "2018-10-01T09:55:56.572Z",
        "updatedAt": "2018-10-01T10:12:00.666Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 955,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 954,
        "firstPublishedAt": "2018-10-01T10:12:00.666Z",
        "publishedAt": "2018-10-01T10:12:00.666Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Require and Module Exports"
        },
        "body": {
          "en-US": "Require is a built in function in Node.js that allows you to load modules in a given js file. Basically, this functionality allows you to componentize your code, by keeping different javascript files separate from one another.\n\nThis architecture differs from javascript used in the browser, mainly in terms of scope. In the browser, js is loaded with a script tag and every script loaded has access to the global scope. So the global scope is essentially a shared space for all scripts.\n\nIn node.js scripts only have access to one another through the use of module.exports and require. For example, in script A you could define module exports to determine which functions in script A could be used in other scripts. Then in script B you could require script A, which would allow you to call all of the exported functions in script B.\n\nA lot of web tooling is built with Node.Js, so the basic architecture is important to understand, to give oneself an idea of how tools are communicating internally and with one another. \n\nIn summation, exporting modules makes them available to other scripts, and require allows other scripts to use them."
        },
        "date": {
          "en-US": "2018-10-01"
        },
        "slug": {
          "en-US": "require-and-module-exports"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1sWp5GBPH6AqwgsYakE6Ga",
        "type": "Entry",
        "createdAt": "2018-10-01T10:10:36.637Z",
        "updatedAt": "2018-10-01T10:11:57.068Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 15,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 14,
        "firstPublishedAt": "2018-10-01T10:11:57.068Z",
        "publishedAt": "2018-10-01T10:11:57.068Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Node.js"
        },
        "slug": {
          "en-US": "node-js"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "16z0s7g6fiSqkK0kWgCWOG"
              }
            }
          ]
        },
        "iconClass": {
          "en-US": "fab fa-node-js"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "71WOZ30DAWQiAWM2UmOsSy",
        "type": "Entry",
        "createdAt": "2018-10-01T10:25:23.796Z",
        "updatedAt": "2018-10-05T16:32:27.568Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 17,
        "firstPublishedAt": "2018-10-01T10:29:43.320Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Contentful"
        },
        "slug": {
          "en-US": "contentful"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "6THYwy8dP2uOYssMAg4Me2"
              }
            },
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "6eDQOiUPf2wWCGoUC0yssM"
              }
            }
          ]
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "dsdmBClScEKe2cq0KumaS",
        "type": "Entry",
        "createdAt": "2018-10-01T10:32:01.579Z",
        "updatedAt": "2018-10-01T14:55:11.651Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 1018,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1017,
        "firstPublishedAt": "2018-10-01T14:55:11.651Z",
        "publishedAt": "2018-10-01T14:55:11.651Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Contentful CDA  Common Resource Attributes"
        },
        "body": {
          "en-US": "For developers using the Contentful Delivery API, arguably the biggest challenge is just asking for data in the right way. Thus, it helps to have a good understanding of the different resource attributes and options for writing querys to pull content out of Contentful in the most efficient way possible.\n\n### Common Resource Attributes\n\nEach resource returned using the Content Delivery API has a sys object with attributes common across resources stored in Contentful. These attributes include:\n\n1. sys.type - String - the resource type - applies to everything\n2. sys.id - String - unique id for the resource - applies to everything except arrays (iterables)\n3. sys.space - Link - link to the resources space - entries, assests, content types\n4. sys.contentType - Link - link to entry's content type - entries\n5. sys.revision - Integer - version of the resource that is published - Entries, assets, content types\n6. sys.createdAt - Date - Time resource was created - Entries, assets, content types\n7. sys.updatedAt - Date - Last time resource was updated - Entries, assets, content types\n8. sys.locale - String - Locale of the resource - Entries and assets\n"
        },
        "date": {
          "en-US": "2018-10-01"
        },
        "slug": {
          "en-US": "contentful-cda-common-resource-attributes"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "636kkE9RN6mw4WImsOWWoU",
        "type": "Entry",
        "createdAt": "2018-10-03T16:28:12.310Z",
        "updatedAt": "2018-10-03T16:55:07.333Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 1709,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1708,
        "firstPublishedAt": "2018-10-03T16:54:58.698Z",
        "publishedAt": "2018-10-03T16:55:07.333Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Semantic Versioning, and package-lock json"
        },
        "body": {
          "en-US": "The problem with node packages, is that they are liabale to change, but they also depend on one another to function. This becomes challenging very quickly because, as the versions of packages change they could break the packages that rely upon them.\n\nThus, we have npm, the node package manager, makes maintaining the right versions of packages fairly easy from one's command line. npm's system of organization is called semantic versioning, which consists of threee digits to describe the version of a package. For example, 1.4.5, says that the major version of the package is one, the minor version is 4, and we are the 5th patch of that minor version. If the major version number changes it signifies a larger change in functionality of a package. And the opposite for the patch number.\n\nSay for instance, however, you are working on a project and run npm install with a certain version of packages. Then a week later, your friend wants to chip in and npm installs the same set up, but some of the packages updated. Your project could function differently on yours and your friend's machine.\n\nThus, the introduction of the package-lock.json file. This acts as single source of truth for the packages and dependencies that a project is using, so if the project is installed on another machine it will utilize the same versions of everything as the original.\n\nHowever, more recently a change has been made, where if a package version in the package.json file (as opposed to package-lock.json) is updated it will over rule the package-lock.json file. This was put in place in response to people struggling to update their node packages even when they meant to.\n\nIn summation semantic versioning and the package.json/package-lock.json work together to make sure that a project isn't broken by evolving node packages on which it depends.\n\n\n"
        },
        "date": {
          "en-US": "2018-10-03"
        },
        "slug": {
          "en-US": "semantic-versioning-and-package-lock-json"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6THYwy8dP2uOYssMAg4Me2",
        "type": "Entry",
        "createdAt": "2018-10-04T12:03:20.829Z",
        "updatedAt": "2018-10-04T15:13:28.594Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 652,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 651,
        "firstPublishedAt": "2018-10-04T15:13:28.594Z",
        "publishedAt": "2018-10-04T15:13:28.594Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Contentful CLI Export and Import"
        },
        "body": {
          "en-US": "The contentful CLI has two commands that allow you to export all of the data from a space and then import it into another space.\n\nThe export command takes the space and puts it into a JSON file. In the terminal, the command looks like this: \n\n    Martins-MacBook-Pro:boilerplate-javascript martinwalker$ contentful space export --space-id 3r3os8le32yo\n  \nThere more options to filter which content to include in the export. For instance, --include-drafts could be a handy one. By default it is set to false, so when I ran the export it didn't grab about 8 entries from my space, which weren't published. Full documentation can be found [here](https://github.com/contentful/contentful-cli/tree/master/docs/space/export).\n\nThe import command takes a JSON file, generated by the export command, and adds the data to another space. An example of the command is as follows: \n\n    Martins-MacBook-Pro:boilerplate-javascript martinwalker$ contentful space import --content-file test-export.json\n    \nLike the export command the import command also has alot of options to filter the content imported into your space. Full documentation can be found [here](https://github.com/contentful/contentful-cli/tree/master/docs/space/import)."
        },
        "date": {
          "en-US": "2018-10-04"
        },
        "slug": {
          "en-US": "contentful-cli-export-and-import"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6togVbrBlKoMA6M2yIAIU8",
        "type": "Entry",
        "createdAt": "2018-10-04T15:30:16.664Z",
        "updatedAt": "2018-10-04T15:35:29.056Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 8,
        "firstPublishedAt": "2018-10-04T15:34:41.377Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "category"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Netlify"
        },
        "slug": {
          "en-US": "netlify"
        },
        "entries": {
          "en-US": [
            {
              "sys": {
                "type": "Link",
                "linkType": "Entry",
                "id": "1QZ0dvFOUsSEgAYggKqkiW"
              }
            }
          ]
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1QZ0dvFOUsSEgAYggKqkiW",
        "type": "Entry",
        "createdAt": "2018-10-04T15:30:28.467Z",
        "updatedAt": "2018-10-04T15:34:38.312Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 392,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 391,
        "firstPublishedAt": "2018-10-04T15:34:38.312Z",
        "publishedAt": "2018-10-04T15:34:38.312Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Netlify Command Line Tool"
        },
        "body": {
          "en-US": "netlifyctl is a command line tool that allows you to deploy websites from the terminal. Since Netlify has done such a good job of utilizing webhooks trigger site redeploys it isn't an essential thing to know about. But if for whatever reason manual deploys are necessary or the site is being deployed for the first time it is a nice tool to know about.\n\nFull documentation can be found [here](https://github.com/netlify/netlifyctl).\n\nExplanation of how to access all the commands + options for using them can be found [here](https://github.com/netlify/netlifyctl#additional-commands)."
        },
        "date": {
          "en-US": "2018-10-04"
        },
        "slug": {
          "en-US": "netlify-command-line-tool"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "15xYkVd7tueOG2gM0A6MQs",
        "type": "Entry",
        "createdAt": "2018-10-05T09:26:01.077Z",
        "updatedAt": "2018-10-05T15:46:59.778Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 1454,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1453,
        "firstPublishedAt": "2018-10-05T13:02:00.789Z",
        "publishedAt": "2018-10-05T15:46:59.778Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "AJAX"
        },
        "body": {
          "en-US": "Ajax is real outdated, and its better to use fetch. Here is my [fetch sandbox](https://codesandbox.io/s/xo8r87vrkw).\n\nI'm leaving this here, however, because it has helped me further clarify how asynchronous operations work, and the relationship between an application or website and 3rd party servers.\n\n\n### What is AJAX\n\nAJAX stands for Asynchronous Javascript and XML. It use XMLHttpRequests to talk to servers, by sending requests and recieving responses formatted as JSON, XML, HTML, and text files.\n\nAJAX is asynchronous, meaning that it can talk to servers and exchange data, without have to refresh your page.\n\nAjax can basically be broken into two steps:\n\n\n### Step 1 - Make the request\n\nSend a request. All that means is that you ask a server for some information, or send a server some information. This is done by opening a request using the .open() method, which can accept three parameters:\n1. The request type such as GET (recieve data) or POST (send data)\n2. The url of the server that you are talking to (API endpoint is probably the most common example)\n3. A boolean value to determine whether to the request should act async (default is set to true, don't have to pass)\n\n\n### Step 2 - Handle the server response\n\nThe server will send some sort of response, which needs a handler function, in order to be useful. The handler function should do a couple things. First it needs to check that the request and response went as planned, i.e. requests readyState attribute is done. Then verify that by checking the HTTP response code, which should be 200. Then, write a function to do whatever you'd like with the server response.\n\nCode example for Fetch\n"
        },
        "date": {
          "en-US": "2018-10-05"
        },
        "slug": {
          "en-US": "ajax"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1ukPU1IdwAgOuGauiuKs6c",
        "type": "Entry",
        "createdAt": "2018-10-05T13:02:10.338Z",
        "updatedAt": "2018-10-05T15:43:20.347Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 772,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 771,
        "firstPublishedAt": "2018-10-05T15:43:20.347Z",
        "publishedAt": "2018-10-05T15:43:20.347Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Fetch API"
        },
        "body": {
          "en-US": "[Link to fetch codesandbox](https://codesandbox.io/s/xo8r87vrkw)\n\nFetch is a API for making HTTP requests and recieving responses. It contains four important interfaces, Request, Response, Headers, and Body, as well as a fetch method that intitiates requests. Fetch basically does the same thing HTTPXmlRequests, but it is just a lot easier to work with. One major difference is that fetch is promised based.\n\n\n\nAll of the interfaces have a constructor method, but they're more commonly seen as a part of the global fetch method. Full documentation on Fetch can be found [here](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options). There is also [a good example](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options) showing the way more complicated fetch requests can be composed, using the different interfaces mentioned above.\n\nThis is a good exercise for understanding the structure of javascript as an Object Oriented Language, since the different interfaces' properties and methods are often nested within one another."
        },
        "date": {
          "en-US": "2018-10-05"
        },
        "slug": {
          "en-US": "fetch-api"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6eDQOiUPf2wWCGoUC0yssM",
        "type": "Entry",
        "createdAt": "2018-10-05T15:49:32.781Z",
        "updatedAt": "2018-10-05T16:32:50.652Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 606,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 605,
        "firstPublishedAt": "2018-10-05T16:32:50.652Z",
        "publishedAt": "2018-10-05T16:32:50.652Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Modifying Contentful API Responses "
        },
        "body": {
          "en-US": "Examples in my codesandbox [here](https://codesandbox.io/s/xo8r87vrkw).\n\nAPI payloads are typically small, but if the an application or website is delivery many payloads at scale then saving any bytes can make a huge difference to its performance. Thus, it is important to only retrieve the data that is absolutely necessary. Contentful provides many filters that allow developers to get rid of extraneous content when they query any APIs.\n\nThe example above utilizes the select, full text search, and links_to_entry filters. The full reference for query options can be found [here](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference).\n\nAll of these filters are also supported by the Contentful SDKs, though my example is just using the Fetch API. Examples for both can be found in the documentation above."
        },
        "date": {
          "en-US": "2018-10-05"
        },
        "slug": {
          "en-US": "modifying-contentful-api-responses"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "38qwXYT0FOcQ4mmWmwmQAY",
        "type": "Entry",
        "createdAt": "2018-10-09T14:45:40.335Z",
        "updatedAt": "2018-10-10T13:40:55.896Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 1710,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 1709,
        "firstPublishedAt": "2018-10-09T14:56:59.758Z",
        "publishedAt": "2018-10-10T13:40:55.896Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "Rest APIs"
        },
        "body": {
          "en-US": "My [code example](https://codesandbox.io/s/5742v71qn) for RESTful API requests.\n\nREST is a set of rules that developers follow when they build APIs. They are composed of four different parts, which are standard across all REST APIs, including:\n\n1. An Endpoint\n2. Methods\n3. Headers\n4. Data (also called the 'body')\n\n\n### The Endpoint\n\nRequests to an endpoint are urls, which follow the same basic structure, beginning with the root of the request, and continuing with the path to the specific resource you want. Additionally, they could include authentication tokens (never put those in the client side), or query parameters allowing you to order the results in a certain way or to only return a certain part of the results. \n\nIt is important to understand that the paths to resources are api specific. So, while REST Principles provide guidelines, each new API holds something new to learn.\n\nFinal note the colon (:) in API documentation denotes a variable.\n\nExample anatomy found in the [code example](https://codesandbox.io/s/5742v71qn).\n\n\n### The Method\n\nThe method just describes the type of request you are making to the server. The possible methods are as follows:\n\n1. GET - Asks the server for data. Performs a 'Read' operation and returns data to the requester.\n2. POST - Asks the server to create a new entry in the database. Performs a 'Create' operation and returns a success or failure message to the requester.\n3. PUT and PATCH - Asks the server to change an entry in the database. Performs an 'Update' operation and returns a success or failure message to the requester.\n4. DELETE - Asks the server to delete a resource in the database. Performs a 'Delete' operation and returns a success or failure message to the requester.\n\n\n\n### The Header\n\nHeaders are a way to pass more information about your request to the server through property-value pairs, that are separated by a colon. I think best way to think of them is options. Sometimes requests will require options, and other times they wont. Full documentation on the information that can included in headers can be found [here](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers)\n\n\n\n### The Data/Body \n\nThis is inforamation that is sent to the server, so it is not applicable for GET requests. There part is fairly self explanatory. It is just important to make sure the data is structured in a way that allows the REST API to recieve it.\n"
        },
        "date": {
          "en-US": "2018-10-09"
        },
        "slug": {
          "en-US": "rest-apis"
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5USsQpihpYs2yekW0qQEUk",
        "type": "Entry",
        "createdAt": "2018-10-10T11:09:01.662Z",
        "updatedAt": "2018-10-10T11:22:12.582Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 317,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 316,
        "firstPublishedAt": "2018-10-10T11:22:07.196Z",
        "publishedAt": "2018-10-10T11:22:12.582Z",
        "contentType": {
          "sys": {
            "type": "Link",
            "linkType": "ContentType",
            "id": "til"
          }
        }
      },
      "fields": {
        "title": {
          "en-US": "cURL"
        },
        "body": {
          "en-US": "Curl is a command line tool and a library for transferring data with URLs. I'd probably use fetch if I was already building something in javascript and needed to get data from an outside API, but I think curl is a really useful thing because it allows you to quickly test an API straight from your command line. \n\nFor example this API call returns my github information using the curl command:\n\n    martinwalker$ curl https://api.github.com/users/martin3walker"
        },
        "date": {
          "en-US": "2018-10-10"
        },
        "slug": {
          "en-US": "curl"
        }
      }
    }
  ],
  "assets": [
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "cg6Y2FEPQIUIu4CkGMsUs",
        "type": "Asset",
        "createdAt": "2018-06-11T19:30:39.399Z",
        "updatedAt": "2018-06-11T19:30:42.949Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-06-11T19:30:42.949Z",
        "publishedAt": "2018-06-11T19:30:42.949Z"
      },
      "fields": {
        "title": {
          "en-US": "Callstack 1"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/cg6Y2FEPQIUIu4CkGMsUs/1df0ce7f53335cbccddabc4b75f4b03e/Callstack_1.png",
            "details": {
              "size": 11857,
              "image": {
                "width": 756,
                "height": 433
              }
            },
            "fileName": "Callstack 1.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "31s5QBbVIQSaAgwckAkiKE",
        "type": "Asset",
        "createdAt": "2018-06-11T19:43:21.455Z",
        "updatedAt": "2018-06-11T19:43:24.277Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-06-11T19:43:24.277Z",
        "publishedAt": "2018-06-11T19:43:24.277Z"
      },
      "fields": {
        "title": {
          "en-US": "Callback Example 2"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/31s5QBbVIQSaAgwckAkiKE/9c4b2c226ddf426496d57722ad9e81f3/Callback_Example_2.png",
            "details": {
              "size": 14988,
              "image": {
                "width": 956,
                "height": 433
              }
            },
            "fileName": "Callback Example 2.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4vZpBx6Us0aqaOSwyEycY8",
        "type": "Asset",
        "createdAt": "2018-07-13T09:24:03.838Z",
        "updatedAt": "2018-07-13T09:28:53.196Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 2,
        "version": 11,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 10,
        "firstPublishedAt": "2018-07-13T09:24:06.970Z",
        "publishedAt": "2018-07-13T09:28:53.196Z"
      },
      "fields": {
        "title": {
          "en-US": "Simple Project"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/4vZpBx6Us0aqaOSwyEycY8/303a1fbced4bfb131ce5b0ed20fbbe09/SImple_Server.png",
            "details": {
              "size": 11731,
              "image": {
                "width": 669,
                "height": 136
              }
            },
            "fileName": "SImple Server.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5AVAtfg6re0gmAyksQcUWE",
        "type": "Asset",
        "createdAt": "2018-07-13T09:28:41.506Z",
        "updatedAt": "2018-07-13T09:28:44.439Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-07-13T09:28:44.439Z",
        "publishedAt": "2018-07-13T09:28:44.439Z"
      },
      "fields": {
        "title": {
          "en-US": "More complicated project"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/5AVAtfg6re0gmAyksQcUWE/a904bddcd5e5c431859d06ef54b4c808/More_complicated_project.png",
            "details": {
              "size": 26446,
              "image": {
                "width": 1280,
                "height": 800
              }
            },
            "fileName": "More complicated project.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4paj3fbDLG2EkggWI6SMyI",
        "type": "Asset",
        "createdAt": "2018-07-13T09:41:14.143Z",
        "updatedAt": "2018-07-13T09:41:18.216Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-07-13T09:41:18.216Z",
        "publishedAt": "2018-07-13T09:41:18.216Z"
      },
      "fields": {
        "title": {
          "en-US": "Very complicated project"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/4paj3fbDLG2EkggWI6SMyI/2604ffaccb282b9d3b6e4a06ce25296a/Very_complicated_project.png",
            "details": {
              "size": 40640,
              "image": {
                "width": 972,
                "height": 421
              }
            },
            "fileName": "Very complicated project.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1QcSo2mb84wyo0e8mA6Mum",
        "type": "Asset",
        "createdAt": "2018-07-15T10:19:08.668Z",
        "updatedAt": "2018-07-15T10:19:11.373Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-07-15T10:19:11.373Z",
        "publishedAt": "2018-07-15T10:19:11.373Z"
      },
      "fields": {
        "title": {
          "en-US": "Topics Assemblies3"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/1QcSo2mb84wyo0e8mA6Mum/3cf69d896c948e4e06bf5b4f0b1e0fe7/Topics_Assemblies3.jpg",
            "details": {
              "size": 216457,
              "image": {
                "width": 1693,
                "height": 1237
              }
            },
            "fileName": "Topics_Assemblies3.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1MHoGCZefCO8UMiwGywsqQ",
        "type": "Asset",
        "createdAt": "2018-08-06T10:31:29.850Z",
        "updatedAt": "2018-08-06T10:31:33.311Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-08-06T10:31:33.311Z",
        "publishedAt": "2018-08-06T10:31:33.311Z"
      },
      "fields": {
        "title": {
          "en-US": "Columns Reversed"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/1MHoGCZefCO8UMiwGywsqQ/07f27364b49aa971fc6756d8ef9157a9/Columns_Reversed.png",
            "details": {
              "size": 6540,
              "image": {
                "width": 451,
                "height": 649
              }
            },
            "fileName": "Columns Reversed.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "20uwq4wVf2gcy4GsigQKWq",
        "type": "Asset",
        "createdAt": "2018-08-27T14:13:14.170Z",
        "updatedAt": "2018-09-05T09:37:42.734Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 9,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 8,
        "firstPublishedAt": "2018-08-27T14:13:21.282Z",
        "publishedAt": "2018-09-05T09:37:42.734Z"
      },
      "fields": {
        "title": {
          "en-US": "HTML Icon"
        },
        "description": {
          "en-US": "HTML Icon"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/20uwq4wVf2gcy4GsigQKWq/c00c7e02b93a72c19ca5af062a714b3f/np_html_795161_F2F2F2.svg",
            "details": {
              "size": 351,
              "image": {
                "width": 100,
                "height": 100
              }
            },
            "fileName": "np_html_795161_F2F2F2.svg",
            "contentType": "image/svg+xml"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6c44X1svL2qUeuWwIc88C8",
        "type": "Asset",
        "createdAt": "2018-08-27T14:13:14.223Z",
        "updatedAt": "2018-09-05T09:37:42.424Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 9,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 8,
        "firstPublishedAt": "2018-08-27T14:13:21.029Z",
        "publishedAt": "2018-09-05T09:37:42.424Z"
      },
      "fields": {
        "title": {
          "en-US": "JavaScript Icon"
        },
        "description": {
          "en-US": "JavaScript Icon"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/6c44X1svL2qUeuWwIc88C8/c0e7ae647ae8b20e3c4a293c1bf25b7f/np_curly-brackets_870094_F2F2F2.svg",
            "details": {
              "size": 1798,
              "image": {
                "width": 100,
                "height": 100
              }
            },
            "fileName": "np_curly-brackets_870094_F2F2F2.svg",
            "contentType": "image/svg+xml"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "32xkjbBa0gYke0sokMKUIO",
        "type": "Asset",
        "createdAt": "2018-08-27T14:13:14.383Z",
        "updatedAt": "2018-09-05T09:37:36.316Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 3,
        "version": 9,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 8,
        "firstPublishedAt": "2018-08-27T14:13:20.444Z",
        "publishedAt": "2018-09-05T09:37:36.316Z"
      },
      "fields": {
        "title": {
          "en-US": "CSS Icon"
        },
        "description": {
          "en-US": "CSS Icon"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/32xkjbBa0gYke0sokMKUIO/e6ed131000163c28a50c49233611b468/np_css_414777_F2F2F2.svg",
            "details": {
              "size": 2449,
              "image": {
                "width": 100,
                "height": 100
              }
            },
            "fileName": "np_css_414777_F2F2F2.svg",
            "contentType": "image/svg+xml"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5xCWJ0pi0gm4YKWwA2WWEu",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:22.589Z",
        "updatedAt": "2018-09-05T09:37:42.193Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:42.193Z",
        "publishedAt": "2018-09-05T09:37:42.193Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify1"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/5xCWJ0pi0gm4YKWwA2WWEu/5d1b46b54b6aa0ea054de1bba93a0782/netlify1.jpg",
            "details": {
              "size": 47926,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify1.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "69ZKXSkpywM6I0w280oO6I",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:22.608Z",
        "updatedAt": "2018-09-05T09:37:41.636Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:41.636Z",
        "publishedAt": "2018-09-05T09:37:41.636Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify3"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/69ZKXSkpywM6I0w280oO6I/cf8b4c6e06a9ce89d452c7d6a266a0ec/netlify3.jpg",
            "details": {
              "size": 53627,
              "image": {
                "width": 800,
                "height": 508
              }
            },
            "fileName": "netlify3.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6u5R40vdNmmQCK00AqqUoo",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:22.647Z",
        "updatedAt": "2018-09-05T09:37:41.959Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:41.959Z",
        "publishedAt": "2018-09-05T09:37:41.959Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify2"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/6u5R40vdNmmQCK00AqqUoo/ae1548d07879865baf8f7a76f3135d92/netlify2.jpg",
            "details": {
              "size": 51000,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify2.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "lNpLXfe824wqe6cU0osUe",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:22.916Z",
        "updatedAt": "2018-09-05T09:37:36.567Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:36.567Z",
        "publishedAt": "2018-09-05T09:37:36.567Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify-preview-url"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/lNpLXfe824wqe6cU0osUe/771a4396234133c089386577dd85c3ec/netlify-preview-url.jpg",
            "details": {
              "size": 59035,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify-preview-url.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6RiFujp7tCykYc4kMeCg4O",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:23.160Z",
        "updatedAt": "2018-09-05T09:37:38.257Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:38.257Z",
        "publishedAt": "2018-09-05T09:37:38.257Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify6"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/6RiFujp7tCykYc4kMeCg4O/66b18a86bb20ab7ecc0ad884be3cef25/netlify6.jpg",
            "details": {
              "size": 54155,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify6.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6v9u2sei1aUcaEGi88wUUw",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:23.443Z",
        "updatedAt": "2018-09-05T09:37:38.479Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:38.479Z",
        "publishedAt": "2018-09-05T09:37:38.479Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify8"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/6v9u2sei1aUcaEGi88wUUw/8c2c5dd9f1a83415d6388e8078add9ad/netlify8.jpg",
            "details": {
              "size": 50330,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify8.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "5sbDhZYXf2aAwQaGWqYYog",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:23.718Z",
        "updatedAt": "2018-09-05T09:37:41.297Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:41.297Z",
        "publishedAt": "2018-09-05T09:37:41.297Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify4"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/5sbDhZYXf2aAwQaGWqYYog/c53188a8e245e24ec3a9ad28e46bd5f3/netlify4.jpg",
            "details": {
              "size": 50294,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify4.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "1CEVP7Nwa8WCAUQ6MKoS4I",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:24.581Z",
        "updatedAt": "2018-09-05T09:37:36.799Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:36.799Z",
        "publishedAt": "2018-09-05T09:37:36.799Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify-12"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/1CEVP7Nwa8WCAUQ6MKoS4I/cdbcd7391bce209db668422078ff5a52/netlify-12.jpg",
            "details": {
              "size": 47201,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify-12.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "64SX3h58qsssYOMIaqcYCS",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:24.638Z",
        "updatedAt": "2018-09-05T09:37:38.023Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:38.023Z",
        "publishedAt": "2018-09-05T09:37:38.023Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify5"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/64SX3h58qsssYOMIaqcYCS/4c0cf263cb419b7073ae354d86332f65/netlify5.jpg",
            "details": {
              "size": 59378,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify5.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4YwJ2XahAQoo0iAQC2Iwcm",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:24.672Z",
        "updatedAt": "2018-09-05T09:37:37.142Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:37.142Z",
        "publishedAt": "2018-09-05T09:37:37.142Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify12"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/4YwJ2XahAQoo0iAQC2Iwcm/794c0ff1d64fee635e2ef8726f5b9a67/netlify12.jpg",
            "details": {
              "size": 60815,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify12.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "3HOeAbQ8Kc6GI48wQUSCuI",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:24.694Z",
        "updatedAt": "2018-09-05T09:37:37.462Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:37.462Z",
        "publishedAt": "2018-09-05T09:37:37.462Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify11"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/3HOeAbQ8Kc6GI48wQUSCuI/adeeb236c99617269237b291cc343f03/netlify11.jpg",
            "details": {
              "size": 61295,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify11.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2cXRHJyW8c8EMqkaIYAacC",
        "type": "Asset",
        "createdAt": "2018-09-05T09:37:24.724Z",
        "updatedAt": "2018-09-05T09:37:37.784Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 3,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 2,
        "firstPublishedAt": "2018-09-05T09:37:37.784Z",
        "publishedAt": "2018-09-05T09:37:37.784Z"
      },
      "fields": {
        "title": {
          "en-US": "netlify10"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/2cXRHJyW8c8EMqkaIYAacC/71a25eee56c93931903c7b16a189ac42/netlify10.jpg",
            "details": {
              "size": 58607,
              "image": {
                "width": 800,
                "height": 515
              }
            },
            "fileName": "netlify10.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "7m1Oevc8X64qOO4cYUsMoC",
        "type": "Asset",
        "createdAt": "2018-09-26T12:56:01.544Z",
        "updatedAt": "2018-09-26T12:56:27.475Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 9,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 8,
        "firstPublishedAt": "2018-09-26T12:56:27.475Z",
        "publishedAt": "2018-09-26T12:56:27.475Z"
      },
      "fields": {
        "title": {
          "en-US": "IA Icon"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/7m1Oevc8X64qOO4cYUsMoC/de18e10bff52d0eb7d855892e1fa47fc/hierarchy_icon.png",
            "details": {
              "size": 14812,
              "image": {
                "width": 512,
                "height": 512
              }
            },
            "fileName": "hierarchy icon.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "W0vHkZXbaMWgAYgomI6GU",
        "type": "Asset",
        "createdAt": "2018-09-26T17:36:55.633Z",
        "updatedAt": "2018-09-26T17:37:17.381Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 7,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 6,
        "firstPublishedAt": "2018-09-26T17:37:17.380Z",
        "publishedAt": "2018-09-26T17:37:17.380Z"
      },
      "fields": {
        "title": {
          "en-US": "Headshot"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/W0vHkZXbaMWgAYgomI6GU/06b88b5bc57daeb39f56452cc0f68189/profile_picture.jpg",
            "details": {
              "size": 20957,
              "image": {
                "width": 400,
                "height": 400
              }
            },
            "fileName": "profile picture.jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "6OfR6OF5bGWqyqGyciCmWA",
        "type": "Asset",
        "createdAt": "2018-09-29T13:41:19.714Z",
        "updatedAt": "2018-09-29T13:41:53.551Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 13,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 12,
        "firstPublishedAt": "2018-09-29T13:41:53.551Z",
        "publishedAt": "2018-09-29T13:41:53.551Z"
      },
      "fields": {
        "title": {
          "en-US": "Meetup Dashboard Cover"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/6OfR6OF5bGWqyqGyciCmWA/2b731232d5de29489d0d69ec923e28c7/Screen_Shot_2018-09-29_at_3.40.56_PM.png",
            "details": {
              "size": 355435,
              "image": {
                "width": 2880,
                "height": 1580
              }
            },
            "fileName": "Screen Shot 2018-09-29 at 3.40.56 PM.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "2z5MlB2PGsGkCcQYeagcom",
        "type": "Asset",
        "createdAt": "2018-09-29T13:42:10.947Z",
        "updatedAt": "2018-09-29T13:42:32.724Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 13,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 12,
        "firstPublishedAt": "2018-09-29T13:42:32.724Z",
        "publishedAt": "2018-09-29T13:42:32.724Z"
      },
      "fields": {
        "title": {
          "en-US": "Mobile Friendly Menu"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/2z5MlB2PGsGkCcQYeagcom/9f5c4518e7a0db453143b89a67951e4a/Screen_Shot_2018-09-29_at_3.40.41_PM.png",
            "details": {
              "size": 558412,
              "image": {
                "width": 2880,
                "height": 1438
              }
            },
            "fileName": "Screen Shot 2018-09-29 at 3.40.41 PM.png",
            "contentType": "image/png"
          }
        }
      }
    },
    {
      "sys": {
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "id": "4nW0K4ZkM08uS2QQ2QUYkW",
        "type": "Asset",
        "createdAt": "2018-10-01T18:54:42.987Z",
        "updatedAt": "2018-10-01T18:55:08.593Z",
        "environment": {
          "sys": {
            "id": "master",
            "type": "Link",
            "linkType": "Environment"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedCounter": 1,
        "version": 15,
        "publishedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "publishedVersion": 14,
        "firstPublishedAt": "2018-10-01T18:55:08.593Z",
        "publishedAt": "2018-10-01T18:55:08.593Z"
      },
      "fields": {
        "title": {
          "en-US": "Mountains Pic"
        },
        "file": {
          "en-US": {
            "url": "//images.ctfassets.net/3r3os8le32yo/4nW0K4ZkM08uS2QQ2QUYkW/5b7685acfa23cd237612f0561f4c8b5e/Image_uploaded_from_iOS__8_.jpg",
            "details": {
              "size": 625621,
              "image": {
                "width": 1152,
                "height": 864
              }
            },
            "fileName": "Image uploaded from iOS (8).jpg",
            "contentType": "image/jpeg"
          }
        }
      }
    }
  ],
  "locales": [
    {
      "name": "English (United States)",
      "code": "en-US",
      "fallbackCode": null,
      "default": true,
      "contentManagementApi": true,
      "contentDeliveryApi": true,
      "optional": false,
      "sys": {
        "type": "Locale",
        "id": "2NWUr46lNLIzMGRJaY5Qdq",
        "version": 1,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "environment": {
          "sys": {
            "type": "Link",
            "linkType": "Environment",
            "id": "master"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "createdAt": "2018-05-08T21:26:14Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedAt": "2018-05-08T21:26:14Z"
      }
    }
  ],
  "webhooks": [
    {
      "name": "Netlify - Deploy a site",
      "url": "https://api.netlify.com/build_hooks/5b8fa39dc6aed61b04744527",
      "httpBasicUsername": null,
      "topics": [
        "Entry.publish",
        "Asset.publish",
        "Entry.unpublish",
        "Asset.unpublish"
      ],
      "filters": [
        {
          "equals": [
            {
              "doc": "sys.environment.sys.id"
            },
            "master"
          ]
        }
      ],
      "transformation": {
        "contentType": "application/json"
      },
      "sys": {
        "type": "WebhookDefinition",
        "id": "26MMDl3FOVkxYj2JWwZsev",
        "version": 0,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "createdAt": "2018-09-05T09:44:56Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedAt": "2018-09-05T09:44:56Z"
      },
      "headers": [
      ]
    }
  ],
  "roles": [
    {
      "name": "Developer",
      "description": "Allows reading entries and managing API keys",
      "policies": [
        {
          "effect": "allow",
          "actions": [
            "read"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": [
            "read"
          ],
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        }
      ],
      "permissions": {
        "ContentModel": [
          "read"
        ],
        "Settings": [
        ],
        "ContentDelivery": "all",
        "Environments": [
        ]
      },
      "sys": {
        "type": "Role",
        "id": "2NTRlVhwhltWq5NfodGZTy",
        "version": 0,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "createdAt": "2018-05-08T21:26:14Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedAt": "2018-05-08T21:26:14Z"
      }
    },
    {
      "name": "Editor",
      "description": "Allows editing, publishing and archiving of content",
      "policies": [
        {
          "effect": "allow",
          "actions": "all",
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Entry"
                ]
              }
            ]
          }
        },
        {
          "effect": "allow",
          "actions": "all",
          "constraint": {
            "and": [
              {
                "equals": [
                  {
                    "doc": "sys.type"
                  },
                  "Asset"
                ]
              }
            ]
          }
        }
      ],
      "permissions": {
        "ContentModel": [
          "read"
        ],
        "Settings": [
        ],
        "ContentDelivery": [
        ],
        "Environments": [
        ]
      },
      "sys": {
        "type": "Role",
        "id": "2NUkxOKy2BdSLRAeRMXyDC",
        "version": 0,
        "space": {
          "sys": {
            "type": "Link",
            "linkType": "Space",
            "id": "3r3os8le32yo"
          }
        },
        "createdBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "createdAt": "2018-05-08T21:26:14Z",
        "updatedBy": {
          "sys": {
            "type": "Link",
            "linkType": "User",
            "id": "0xAU1rz5uyEJ0ItTExcjsa"
          }
        },
        "updatedAt": "2018-05-08T21:26:14Z"
      }
    }
  ]
}